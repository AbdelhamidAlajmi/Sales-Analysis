-- Ranking Analysis
-- Which 5 products generate the highest revenue
SELECT
	P.PRODUCT_NAME,
	SUM(SALES_AMOUNT) AS REV
FROM
	FACT_SALES S
	JOIN DIM_PRODUCTS P ON S.PRODUCT_KEY = P.PRODUCT_KEY
GROUP BY
	S.PRODUCT_KEY,
	P.PRODUCT_NAME
ORDER BY
	REV DESC
LIMIT
	5;

-- by window function
WITH
	RANKING AS (
		SELECT
			P.PRODUCT_NAME,
			SUM(S.SALES_AMOUNT) TOT_REV,
			ROW_NUMBER() OVER (
				ORDER BY
					SUM(S.SALES_AMOUNT) DESC
			) AS RANK_PRODUCTS
		FROM
			FACT_SALES S
			JOIN DIM_PRODUCTS P ON S.PRODUCT_KEY = P.PRODUCT_KEY
		GROUP BY
			P.PRODUCT_NAME
	)
SELECT
	*
FROM
	RANKING
WHERE
	RANK_PRODUCTS <= 5;

-- What's the 5 worst-performing products in the terms of sales
SELECT
	P.PRODUCT_NAME,
	SUM(SALES_AMOUNT) AS REV
FROM
	FACT_SALES S
	JOIN DIM_PRODUCTS P ON S.PRODUCT_KEY = P.PRODUCT_KEY
GROUP BY
	S.PRODUCT_KEY,
	P.PRODUCT_NAME
ORDER BY
	REV
LIMIT
	5;

-- Which category generate the highest revenue
SELECT
	P.CATEGORY,
	SUM(SALES_AMOUNT) AS REV
FROM
	FACT_SALES S
	JOIN DIM_PRODUCTS P ON S.PRODUCT_KEY = P.PRODUCT_KEY
GROUP BY
	P.CATEGORY
ORDER BY
	REV DESC;

-- what 5 subcategory generate the highest revenue
SELECT
	P.SUBCATEGORY,
	SUM(SALES_AMOUNT) AS REV
FROM
	FACT_SALES S
	JOIN DIM_PRODUCTS P ON S.PRODUCT_KEY = P.PRODUCT_KEY
GROUP BY
	P.SUBCATEGORY
ORDER BY
	REV DESC
LIMIT
	5;

-- find the top 10 customers who have generated the highest revenue
WITH
	RANKING_CTE AS (
		SELECT
			S.CUSTOMER_KEY,
			C.FIRST_NAME || ' ' || C.LAST_NAME AS CUSTOMER_NAME,
			SUM(S.SALES_AMOUNT) AS TOT_SALES,
			DENSE_RANK() OVER (
				ORDER BY
					SUM(S.SALES_AMOUNT) DESC
			) AS RANKING
		FROM
			FACT_SALES S
			JOIN DIM_CUSTOMERS C ON S.CUSTOMER_KEY = C.CUSTOMER_KEY
		GROUP BY
			S.CUSTOMER_KEY,
			C.FIRST_NAME,
			C.LAST_NAME
	)
SELECT
	CUSTOMER_KEY,
	CUSTOMER_NAME,
	TOT_SALES
FROM
	RANKING_CTE
WHERE
	RANKING <= 10;

-- find the top 10 customers who have generated the highest revenue
WITH
	RANKING_CTE AS (
		SELECT
			S.CUSTOMER_KEY,
			C.FIRST_NAME || ' ' || C.LAST_NAME AS CUSTOMER_NAME,
			COUNT(DISTINCT S.ORDER_NUMBER) AS NUM_ORDS,
			DENSE_RANK() OVER (
				ORDER BY
					COUNT(DISTINCT S.ORDER_NUMBER)
			) AS RANKING
		FROM
			FACT_SALES S
			JOIN DIM_CUSTOMERS C ON S.CUSTOMER_KEY = C.CUSTOMER_KEY
		GROUP BY
			S.CUSTOMER_KEY,
			C.FIRST_NAME,
			C.LAST_NAME
	)
SELECT
	CUSTOMER_KEY,
	CUSTOMER_NAME,
	NUM_ORDS,
	RANKING
FROM
	RANKING_CTE
WHERE
	RANKING <= 3;