-- Performance Analysis
WITH
	CTE AS (
		SELECT
			P.PRODUCT_NAME,
			EXTRACT(
				YEAR
				FROM
					S.ORDER_DATE
			) AS ORDER_YEAR,
			SUM(S.SALES_AMOUNT) AS TOTAL_SALES
		FROM
			FACT_SALES S
			JOIN DIM_PRODUCTS P ON S.PRODUCT_KEY = P.PRODUCT_KEY
		WHERE
			S.ORDER_DATE IS NOT NULL
		GROUP BY
			P.PRODUCT_NAME,
			EXTRACT(
				YEAR
				FROM
					S.ORDER_DATE
			)
		ORDER BY
			P.PRODUCT_NAME,
			EXTRACT(
				YEAR
				FROM
					S.ORDER_DATE
			)
	)
SELECT
	*,
	ROUND(
		AVG(TOTAL_SALES) OVER (
			PARTITION BY
				PRODUCT_NAME
		)
	) AS AVG_SALES,
	ROUND(
		TOTAL_SALES - AVG(TOTAL_SALES) OVER (
			PARTITION BY
				PRODUCT_NAME
		)
	) AS DIFF_AVG,
	CASE
		WHEN TOTAL_SALES > AVG(TOTAL_SALES) OVER (
			PARTITION BY
				PRODUCT_NAME
		) THEN 'Above The Average'
		WHEN TOTAL_SALES < AVG(TOTAL_SALES) OVER (
			PARTITION BY
				PRODUCT_NAME
		) THEN 'Below The Average'
		ELSE 'At The Average'
	END AS AVG_CHANGE,
	-- Year Over Year Analysis
	LAG(TOTAL_SALES) OVER (
		PARTITION BY
			PRODUCT_NAME
		ORDER BY
			ORDER_YEAR
	) AS PY_SALES,
	TOTAL_SALES - LAG(TOTAL_SALES) OVER (
		PARTITION BY
			PRODUCT_NAME
		ORDER BY
			ORDER_YEAR
	) AS DIFF_BY_YEAR,
	CASE
		WHEN TOTAL_SALES > LAG(TOTAL_SALES) OVER (
			PARTITION BY
				PRODUCT_NAME
			ORDER BY
				ORDER_YEAR
		) THEN 'Increase'
		WHEN TOTAL_SALES < LAG(TOTAL_SALES) OVER (
			PARTITION BY
				PRODUCT_NAME
			ORDER BY
				ORDER_YEAR
		) THEN 'Decrease'
		ELSE 'No Change'
	END AS YOY
FROM
	CTE;
